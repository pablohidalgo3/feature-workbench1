---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
    const players = await getCollection("players");

    return players.map((player) => ({
        params: { id: player.slug },
        props: { player }
    }));
}

const { player } = Astro.props;
const { data, slug } = player;
const { nickname, name, country, birthday, age, team, position, img } = data;

const { Content } = await render(player);
---

<style>
  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .scroll-arrow {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: opacity 0.3s ease;
    animation: bounce 2s infinite;
  }

  .scroll-arrow svg {
    width: 24px;
    height: 24px;
  }

  @media (min-width: 768px) {
    .scroll-arrow {
      display: none;
    }
  }
</style>

<Layout title={`Player - ${nickname}`}>
  <div class="flex flex-col md:flex-row gap-12 justify-center items-center md:items-start">
    <aside class="flex flex-col items-center gap-4 md:items-start">
      <img transition:name={`img-${slug}`} class="rounded w-48 h-auto md:w-72" src={`/${img}`} alt={name} />
    </aside>

    <main class="text-center md:text-left max-w-3xl mt-6 md:mt-0">
      <h1 transition:name={`nickname-${slug}`} class="text-3xl md:text-4xl font-bold mb-4">{nickname}</h1>
      <h1 transition:name={`name-${slug}`} class="text-xl md:text-2xl font-bold mb-4">{name}</h1>
      <h1 class="text-xl md:text-2xl font-bold mb-8">{position}</h1>

      <div id="content-section" class="space-y-4 md:prose md:prose-invert">
        <Content />
      </div>
    </main>
  </div>

  <div id="scroll-arrow" class="scroll-arrow opacity-0">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
    </svg>
  </div>
</Layout>

<script>
  const scrollArrow = document.getElementById('scroll-arrow');
  const contentSection = document.getElementById('content-section');

  if (scrollArrow instanceof HTMLElement && contentSection instanceof HTMLElement) {
    function checkScroll() {
      const contentRect = contentSection ? contentSection.getBoundingClientRect() : { top: 0, bottom: 0 };
      const isContentVisible = contentRect.top < window.innerHeight && contentRect.bottom >= 0;
      
      if (scrollArrow) {
        scrollArrow.style.opacity = isContentVisible ? '0' : '1';
      }
    }

    window.addEventListener('scroll', checkScroll);
    window.addEventListener('resize', checkScroll);

    // Check initial position
    checkScroll();

    // Smooth scrolling when clicking the arrow
    scrollArrow.addEventListener('click', () => {
      contentSection.scrollIntoView({ behavior: 'smooth' });
    });
  } else {
    console.error('Required elements not found');
  }
</script>